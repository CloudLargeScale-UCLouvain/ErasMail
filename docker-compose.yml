version: '3.7'

services:
  nginx:
    container_name: nginx
    build:
      context: .
      dockerfile: ./nginx/Dockerfile
    ports:
      - 8080:80
    environment:
      - SERVER_NAME=localhost
    depends_on:
      - web
  web:
    container_name: web
    build: ./back-end/erasmail
    command: ["sh", "-c", 
                "python manage.py migrate; 
                gunicorn erasmail.wsgi:application -t 0 -b 0.0.0.0:8000 --log-level=critical"
             ] # python manage.py flush --no-input;
    ports:
      - 8000:8000
    env_file:
      - ./.env.dev
    depends_on:
      - db
      - redis
  db:
    container_name: db
    image: postgres:12.0-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env.db
  celery:
    build: ./back-end/erasmail
    command: celery -A erasmail worker -l info
    env_file:
      - ./.env.dev
    depends_on:
      - redis
  celery-beat:
    build: ./back-end/erasmail
    command: celery -A erasmail beat -l info
    env_file:
      - ./.env.dev
    depends_on:
      - redis
  redis:
    image: redis:alpine 

volumes:
  postgres_data: